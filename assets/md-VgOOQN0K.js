import{o as a,c as l,k as i,q as c,s as r,B as s,e,aa as t}from"./modules/vue-rOHTgtFx.js";import{I as m}from"./slidev/default-zAXCsn9X.js";import{u,f as d}from"./slidev/context-o1RxciAU.js";import"./index-C0ChEDTH.js";import"./modules/shiki-C4tUuVoI.js";const h=e("h1",null,"Useful commands and scenarios",-1),f=e("ul",null,[e("li",null,[t("üçí "),e("code",null,"git cherry-pick <commit-sha>"),t(": you want to pick up some changes from somewhere else into your branch. You may have to merge conflicts!")]),e("li",null,[t("üîô "),e("code",null,"git reset --soft HEAD~1"),t(": This says to reset the current branch‚Äôs "),e("code",null,"HEAD"),t(' to "minus 1" i.e. undo the last commit. '),e("code",null,"--soft"),t(" means undo the last commit but keep the changes I made. A common use case is when pushing to a branch and seeing the tests fail, you might then "),e("code",null,"git reset --soft HEAD~1"),t(", do a small fix and "),e("code",null,"git push -f"),t(". It can also be used to "),e("em",null,"squash"),t(" commits by "),e("code",null,'git reset --soft HEAD~n && git commit -m "All in one!"')]),e("li",null,[t("üîç "),e("code",null,"git blame <FILE>"),t(": Find out who made changes to different lines in a file and when")])],-1),p={__name:"slides.md__slidev_14",setup(_){const{$slidev:g,$nav:k,$clicksContext:o,$clicks:x,$page:y,$renderContext:$,$frontmatter:n}=u();return o.setup(),(b,w)=>(a(),l(m,c(r(s(d)(s(n),13))),{default:i(()=>[h,f]),_:1},16))}},C=p;export{C as default};
